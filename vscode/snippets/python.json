{
  // Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  "Basic python skeleton": {
    "prefix": "pyskel",
    "body": [
      "#!/usr/bin/env python",
      "",
      "def main() -> None:",
      "    ...",
      "",
      "###",
      "",
      "if __name__ == \"__main__\":",
      "    main()",
      ""
    ],
    "description": "Inserts a basic def main/if name skeleton"
  },
  "now timestamp": {
    "prefix": "pynow",
    "body": [
      "def now() -> str:",
      "    return str(datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\"))"
    ],
    "description": "Inserts a function to return the current timestamp"
  },
  "list flattener": {
    "prefix": "pyflatten",
    "body": [
      "def flatten(l: List[Any]) -> List[Any]:",
      "    return [item for sublist in l for item in sublist]"
    ]
  },
  "Get age in years from two datetime objects": {
    "prefix": "pyage",
    "body": [
      "def age(d1: datetime.datetime, d2: datetime.datetime = datetime.datetime.now()) -> int:",
      "    return int((d2 - d1).days / 365.25)"
    ]
  }
}
