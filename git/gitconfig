[alias]
	bname = branch --show-current
    nb = switch -c                  # create and switch to a new branch - nb=new branch
    co = switch
    mt = mergetool
    staged = diff --cached
    amend = commit --amend
    ff = pull --ff-only
    lol = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    sup = !git push -u origin `git symbolic-ref --short HEAD`
    nu = !git branch -u origin/$(git branch --show-current)
    remotes = remote -v
	#state = "!sh -c 'if [ $(git diff --name-only | wc -l) -ne 0 ]; then echo dirty; fi'"
	state = ! [ $(git diff --name-only | wc -l) -ne 0 ] && echo dirty || true
	hash = ! git describe --dirty --abbrev=8 --always | sed -e 's/.*g//'
    unstage = reset --
    # Interactive rebase with the given number of latest commits
    reb = "!r() { git rebase -i HEAD~$1; }; r"
    # Remove branches that have already been merged with master, a.k.a. ‘delete merged’
    dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d; git remote -v update -p"

[filter "lfs"]
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f

# always use ssh
[url "ssh://git@github.com/"]
    insteadOf = https://github.com/

[credential]
    helper = cache --timeout=3600

[push]
    followTags = true

[merge]
    log = true

[diff]
    renames = copies

[color]
    ui = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold # line info
    old = red # deletions
    new = green # additions

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[pull]
	rebase = false

[init]
	defaultBranch = main

# store personal / user-specific settings 
[include]
    path = ~/.gitconfig.inc
