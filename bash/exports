#!/bin/bash

# XDG defaults
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share:/usr/share:/var/lib/snapd/desktop

# general
export LANG="en_US.utf8"
export LC_ALL="en_US.utf8"
export PAGER=less
export MANPAGER="less -X"
export EDITOR=vim
for user_bin in "$HOME/bin" "$HOME/.local/bin"; do
    [[ -d "$user_bin" ]] && update_path "$user_bin"
done

# conda
# shellcheck disable=2155
export DEFAULT_CONDA_ENV=$(hostname -s)

# python
export PYTHONPATH=$HOME/lib/python
export PIPENV_VENV_IN_PROJECT=1
export PIPENV_SPINNER=arrow3

# go stuff
export GOPATH=$HOME/go
export GOBIN=$GOPATH/bin
export GO111MODULE=auto
for go_bin in /usr/local/go/bin "$GOBIN"; do
    [[ -d "$go_bin" ]] && update_path "$go_bin"
done

# rust
[ -d "$HOME/.cargo/bin" ] && update_path "$HOME/.cargo/bin"

# bash
export HISTSIZE=50000000
export HISTFILESIZE=$HISTSIZE
export HISTCONTROL=ignoredups

# docker
export DOCKER_BUILDKIT=1

# flatpak
if which flatpak &>/dev/null; then
    FLATPAK_XDG_DATA_DIRS="/var/lib/flatpak/exports/share:$XDG_DATA_HOME/flatpak/exports/share"
    # prevent duplication when running `exec bash` to refresh shell env
    if ! [[ "$XDG_DATA_DIRS" =~ :$FLATPAK_XDG_DATA_DIRS ]]; then
        export XDG_DATA_DIRS="$XDG_DATA_DIRS:$FLATPAK_XDG_DATA_DIRS"
    fi
fi

# bat
if which bat &>/dev/null; then
    export BAT_PAGER="less -Xr"
fi

# nix
# shellcheck source=/dev/null
[[ -f "$HOME/.nix-profile/etc/profile.d/nix.sh" ]] && . "$HOME/.nix-profile/etc/profile.d/nix.sh"
