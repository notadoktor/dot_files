# shellcheck shell=bash

# XDG defaults
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share:/usr/share:/var/lib/snapd/desktop

# general
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export PAGER=less
export MANPAGER="less -X"
export EDITOR=vim

# extra dirs where binaries may live to add to the PATH
USER_BINS=("$HOME/bin" "$HOME/.local/bin")
APP_BINS=()

# HiDPI
export GDK_SCALE=1.5
export GDK_DPI_SCALE=0.75
export QT_SCALE_FACTOR=1.5

# conda
# shellcheck disable=2155
export DEFAULT_CONDA_ENV=$(hostname -s)

# python
# export PYTHONPATH=$HOME/lib/python
export PIPENV_VENV_IN_PROJECT=1
export PIPENV_SPINNER=arrow3

# go stuff
export GOPATH=$HOME/go
export GOBIN=$GOPATH/bin
export GO111MODULE=auto
APP_BINS+=(/usr/local/go/bin "$GOBIN")

# rust/cargo
APP_BINS+=("$HOME/.cargo/bin")

# bat
if command -v bat &>/dev/null; then
    export BAT_PAGER="less -Xr"
fi

# scala / coursier
[[ -d "$HOME/.local/share/coursier/bin" ]] && update_path "$HOME/.local/share/coursier/bin"

# bash
export HISTSIZE=50000000
export HISTFILESIZE=$HISTSIZE
export HISTCONTROL=ignoredups

# docker
export DOCKER_BUILDKIT=1

# flatpak
if command -v flatpak &>/dev/null; then
    FLATPAK_XDG_DATA_DIRS="/var/lib/flatpak/exports/share:$XDG_DATA_HOME/flatpak/exports/share"
    # prevent duplication when running `exec bash` to refresh shell env
    if ! [[ "$XDG_DATA_DIRS" =~ :$FLATPAK_XDG_DATA_DIRS ]]; then
        export XDG_DATA_DIRS="$XDG_DATA_DIRS:$FLATPAK_XDG_DATA_DIRS"
    fi
fi

# nix
# shellcheck source=/dev/null
[[ -f "$HOME/.nix-profile/etc/profile.d/nix.sh" ]] && . "$HOME/.nix-profile/etc/profile.d/nix.sh"

# homebrew
APP_BINS+=(/opt/homebrew/bin)
# add non g-prefixed coreutils to PATH
APP_BINS+=(/opt/homebrew/Cellar/*/*/libexec/gnubin)

# add various alternate bin dirs to PATH. Add user dirs last for top priority
for bin_dir in "${APP_BINS[@]}" "${USER_BINS[@]}"; do
    [[ -d "$bin_dir" ]] && update_path "$bin_dir"
done
unset APP_BINS USER_BINS

# pyenv
export PYENV_ROOT=${PYENV_ROOT:-"$HOME/.pyenv"}
if [[ -d $PYENV_ROOT/bin ]]; then
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
fi
