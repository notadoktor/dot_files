# shellcheck shell=bash

HERE=$(dirname "$(resolve_path "${BASH_SOURCE[0]}")")

# things I don't need / or aren't working nicely
IGNORE_COMPLETIONS=(fcoeadm fcoemon lldpad lldptool)
COMP_DIRS=(/etc/bash_completion.d "$HOME/.local/share/bash-completion/completions")
for comp_dir in "${COMP_DIRS[@]}"; do
    if [[ -d "$comp_dir" ]]; then
        for file in "$comp_dir/"*; do
            if in_filter "$(basename "$file")" "${IGNORE_COMPLETIONS[@]}"; then
                continue
            fi

            # shellcheck source=/dev/null
            [[ -f $file ]] && source "$file"
        done
    fi
done

declare -A comp
comp[aws]="echo complete -C aws_completer aws"
comp[doctl]="doctl completion bash"
comp[pip]="pip completion --bash"
comp[pipenv]="_PIPENV_COMPLETE=bash_source pipenv"

# manjaro install rust directly, so no rustup even if cargo exists
if command -v rustup &>/dev/null; then
    _rustup_comp="rustup completions bash"
    comp[rustup]="${_rustup_comp} rustup"
    comp[cargo]="${_rustup_comp} cargo"
    unset _rustup_comp
fi

# pip and doctl
for comp_name in ${!comp[*]}; do
    command -v "$comp_name" &>/dev/null || continue

    comp_file="$HERE/completions_${comp_name}"
    if [[ ! -e "$comp_file" ]]; then
        bash -c "${comp[$comp_name]}" >"$comp_file"
    fi
    # shellcheck source=/dev/null
    source "$comp_file"
done

# homebrew
if command -v brew &>/dev/null; then
    HOMEBREW_PREFIX="$(brew --prefix)"
    if [[ -r "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh" ]]; then
        # shellcheck disable=SC1091
        source "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh"
    else
        for COMPLETION in "${HOMEBREW_PREFIX}/etc/bash_completion.d/"*; do
            # shellcheck disable=SC1090
            [[ -r "${COMPLETION}" ]] && source "${COMPLETION}"
        done
    fi
fi

# macos git
macos_git_comp=/Library/Developer/CommandLineTools/usr/share/git-core/git-completion.bash
if [[ -r $macos_git_comp ]]; then
    # shellcheck source=/dev/null
    source "$macos_git_comp"
fi
unset macos_git_comp
